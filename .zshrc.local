# Local configurations -*- mode: sh -*-

# Show system information
# if (( $+commands[neofetch] )); then
#     neofetch
# fi

# iTerm2 shell integration
# if test -e "${HOME}/.iterm2_shell_integration.zsh"; then
#     source "${HOME}/.iterm2_shell_integration.zsh"
# fi

# Plugins
# zinit wait lucid for \
    #       OMZP::python \
    #       OMZP::golang \
    #       OMZP::ruby \
    #       OMZP::rbenv \
    #       OMZP::rails

# Theme
if [ -n "$INSIDE_EMACS" ]; then
    DISABLE_AUTO_TITLE="true"
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=gray,underline'
fi

# Env
# export EDITOR=vim

# Aliases
# alias upgrade_go='$DOTFILES/install_go.sh'

# Proxy
PROXY=http://127.0.0.1:7890     # 1088
SOCK_PROXY=socks5://127.0.0.1:7890 # 1086
NO_PROXY=10.*.*.*,192.168.*.*,*.local,localhost,127.0.0.1
alias set_polipo_proxy='ps -ef | grep polipo | grep -v grep; [ $? -ne 0 ] && polipo socksParentProxy=192.168.31.1:1082 &'
alias showproxy='echo "proxy=$http_proxy"'
alias setproxy='export http_proxy=$PROXY; export https_proxy=$PROXY; export no_proxy=$NO_PROXY; showproxy'
alias unsetproxy='export http_proxy=; export https_proxy=; export all_proxy=; export no_proxy=; showproxy'
alias toggleproxy='if [ -n "$http_proxy" ]; then unsetproxy; else setproxy; fi'
alias set_sock_proxy='export http_proxy=$SOCK_PROXY; export https_proxy=$SOCK_PROXY; all_proxy=$SOCK_PROXY; export no_proxy=$NO_PROXY; showproxy'
alias unset_sock_proxy=unsetproxy
alias toggle_sock_proxy='if [ -n "$http_proxy" ]; then unset_sock_proxy; else set_sock_proxy; fi'

# Homebrew
if [[ $OSTYPE == darwin* ]]; then
    # export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles

    function set_homebrew_mirror() {
        export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles/bottles

        cd "$(brew --repo)"
        git remote set-url origin https://mirrors.ustc.edu.cn/brew.git
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-core
        git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-cask
        git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-cask-versions
        git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask-versions.git
        cd - >/dev/null

        brew update
    }

    function reset_homebrew() {
        export HOMEBREW_BOTTLE_DOMAIN=

        cd "$(brew --repo)"
        git remote set-url origin https://github.com/Homebrew/brew.git
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-core
        git remote set-url origin https://github.com/Homebrew/homebrew-core
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-cask
        git remote set-url origin https://github.com/Homebrew/homebrew-cask
        cd - >/dev/null

        cd "$(brew --repo)"/Library/Taps/homebrew/homebrew-cask-versions
        git remote set-url origin https://github.com/Homebrew/homebrew-cask-versions.git
        cd - >/dev/null

        brew update
    }
fi

# Golang
if (( $+commands[go] )); then
    function gocomplete() {
        zinit snippet OMZP::golang
    }

    function goclean() {
        go clean -i -n $1
        go clean -i $1
        rm -rf $GOPATH/src/$1
        if [ -d $GOPATH/pkg/${sysOS:l}_amd64/$1 ]; then
            rm -rf $GOPATH/pkg/${sysOS:l}_amd64/$1;
        fi
    }

    function goclean_test() {
        go clean -i -n $1
        tree -L 1 $GOPATH/src/$1
        tree -L 1 $GOPATH/pkg/${sysOS:l}_amd64/$1
    }
fi
